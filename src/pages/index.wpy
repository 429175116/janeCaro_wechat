/*
 * @Author: luow 
 * @Date: 2019-08-08 10:15:14 
 * @Last Modified by: luow
 * @Last Modified time: 2019-08-09 16:00:31
 */
// 首页
<template>
  <view>
    <view class="search">
      <icon class="iconfont iconfangdajing searchIcon" @tap="goSearchPage"></icon>
      <input type="text" placeholder="搜索" @tap="goSearchPage" />
      <!-- <input type="text" placeholder="搜索" @input="getSearchKey" /> -->
      <icon class="iconfont iconsaoma saoma" @tap="saoma"></icon>
    </view>
    <view class="head">
      <ul class="item">
        <li>今日销售额</li>
        <li class="amount">
          ￥
          <text>30000</text>
        </li>
        <li>
          销售回款
          <text class="amount">￥</text>
          <text class="num">30</text>
        </li>
      </ul>
      <ul class="item">
        <li class="settShow">
          <view class="iconCon">
            <icon class="iconfont iconzhengyan"></icon>
            显示
          </view>
          <view class="iconCon">
            <icon class="iconfont iconyey2"></icon>
            隐藏
          </view>
        </li>
        <li>
          销售单数
          <text class="num">30</text>
        </li>
      </ul>
    </view>
    <view class="functionList">
      <repeat for="{{navList}}" item="item">
        <view @tap="goPage" data-type="{{item.type}}">
          <image src="/assets/images/{{item.img}}.png"></image>
          <text>{{item.name}}</text>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '简卡罗'
    }
    components = {}

    mixins = []

    data = {
      navList: [
        {'name': '商品', 'type': 'commodity', 'img': 'commodity_icon'},
        {'name': '入库', 'type': 'storage', 'img': 'storage_icon'},
        {'name': '销售单', 'type': 'salesOrder', 'img': 'salesOrder_icon'},
        {'name': '退货', 'type': 'return', 'img': 'return_icon'},
        {'name': '库存查询', 'type': 'inventoryInquiry', 'img': 'inventoryInquiry_icon'},
        {'name': '客户对账', 'type': 'reconciliation', 'img': 'reconciliation_icon'},
        {'name': '收款单', 'type': 'receipt', 'img': 'receipt_icon'},
        {'name': '库存调整单', 'type': 'adjustment', 'img': 'adjustment_icon'},
        {'name': '我的', 'type': 'usre', 'img': 'adjustment_icon'}
      ]
    }

    computed = {}

    methods = {
      // 扫码
      saoma() {
        wx.scanCode({
          onlyFromCamera:true,
          success: res => {
            console.log(res)
            // var path = res.path
            // //微信开发者工具 在开发者工具里出现乱码需要decodeURIComponent转义,真机不需要,可以直接使用
            // console.log("res.path",res.path); //pages/me/me?scene=table_id%3D8%26shop_id%3D1
            // path= path.split('?');   //分割字符串 path[0]等于pages/me/me,path[1]等于scene=table_id%3D8%26shop_id%3D1
            // var scene = path[1];                 
            // var reg  = new RegExp("scene=","g");   
            // var scene = path.replace(reg,"");
            // //手机和开放者工具不一样的地方就在这几步了
            // var scene = decodeURIComponent(scene);   //在手机上省略这一步  开发者工具需要
            // scene = scene.split("&");
            // var list = {};
            // for(var i = 0; i<scene.length; i++){
            //     var b = scene[i].split("=");
            //     list[b[0]] = b[1];
            // }
            // console.log(list);
          }
        })
      },
      // 进入搜索页
      goSearchPage() {
        this.$navigate(`/pages/search`)
      },
      // 搜索内容输入监听
      // getSearchKey(e) {
      //   let key = e.detail.value
      //   console.log(key)
      // },
      // 页面跳转
      goPage(e) {
        let pageType = e.currentTarget.dataset.type
        let url = ''
        switch (pageType) {
          case 'commodity': // 商品
            url = 'commodityList'
            break
          case 'storage': // 入库
            url = 'storage'
            break
          case 'salesOrder': // 销售单
            url = 'overhead'
            break
          case 'return': // 退货
            url = ''
            break
          case 'inventoryInquiry': // 库存查询
            url = 'stockList'
            break
          case 'reconciliation': // 客户对账
            url = 'reconciliation'
            break
          case 'receipt': // 收款单
            url = 'receipt'
            break
          case 'adjustment': // 库存调整单
            url = 'stockAdjustment'
            break
          case 'usre': // 会员中心
            url = 'VIP'
            break
          default:

            break
        }
        if (!url) {
          wx.showModal({
            title: '',
            content: '页面缺失'
          })
          return false
        }
        // console.log(url)
        // return false
        this.$navigate(`/pages/${url}`)
      }
    }

    events = {}

    onLoad() {
      // this.countTime()
    }
    countTime() {
      var now = 1565253588
      var end = 1565276400
      setInterval(e => {
          now++
          var times = end-now; 
          console.log(end, now, times)
          if (times > 0) {
            var endOutStr = ''
            let day = Math.floor(times / (60 * 60 * 24));
            let hour = Math.floor(times / (60 * 60)) - (day * 24);
            let minute = Math.floor(times / 60) - (day * 24 * 60) - (hour * 60);
            let second = times - (day * 24 * 60) - (hour * 60 * 60) - (minute * 60)
            if (parseInt(day) != 0) {
              endOutStr = `${day}天${hour}时${minute}分${second}秒`
            } else if (parseInt(hour) != 0) {
              endOutStr = `${hour}时${minute}分${second}秒`
              
            } else if (parseInt(minute) != 0)  {
              endOutStr = `${minute}分${second}秒`
            } else if (parseInt(second) != 0)  {
              endOutStr = `${second}秒`
            }
          }else{
            endOutStr = '0秒'
          }
          console.log(endOutStr)
          return endOutStr
      }, 1000) 
    }
  }
</script>
<style lang="less">
page{
  background-color: #Fff;
}
.search{
  width: 690rpx;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 30rpx;
  .searchIcon{
    width: 70rpx;
    height: 80rpx;
    background-color: #f7f7f7;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 80rpx 0 0 80rpx;
    color: #c2c2c2;
    font-size: 30rpx;
  }
   input{
    background-color: #f7f7f7;
    width: 545rpx;
    height: 80rpx;
    border-radius: 0 80rpx 80rpx 0;
    color: #999;
  }
  .saoma{
    display: flex;
    align-items: center;
    justify-content: flex-end;
    width: 75rpx;
    height: 80rpx;
    color: #999;
    font-size: 48rpx;
  }
}
.head{
  width: 590rpx;
  height: 185rpx;
  padding: 50rpx;
  margin: 0 30rpx;
  border-radius: 30rpx;
  color: #fff;
  font-size: 28rpx;
  background: linear-gradient(to bottom right,#00d2fd, #0067fe);
  display: flex;
  align-items: center;
  justify-content: space-between;
  
  .item{
    height: 185rpx;
    display: flex;
    // align-items: space-around;
    justify-content: space-between;
    flex-direction: column;
  }
  .num{
    font-weight: 600;
  }
  .amount{
    font-size: 25rpx;
    text{
      font-size: 50rpx;
      font-weight: 600;
    }
  }
  .settShow{
    display: flex;
    justify-content: flex-end;
    flex-direction: column;
  }
  .iconCon{
    display: flex;
    align-items: center;
    justify-content: flex-end;
    icon{
      margin-right: 10rpx;
      font-size: 40rpx;
    }
  }
}
.functionList{
  width: 690rpx;
  padding: 30rpx;
  border-top: 10rpx solid #f2f2f2;
  margin-top: 30rpx;
  display: flex;
  justify-content: space-around;
  flex-direction: row;
  flex-wrap: wrap;
  view{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width: 145rpx;
    height: 160rpx;
    font-size: 28rpx;
    color: #333333;
  }
  image{
    margin-bottom: 20rpx;
    width: 50rpx;
    height: 50rpx;
  }
}
</style>
